/*** Dreamsocket, Inc.* http://dreamsocket.com* Copyright  2010 Dreamsocket, Inc.* * Permission is hereby granted, free of charge, to any person* obtaining a copy of this software and associated documentation* files (the "Software"), to deal in the Software without* restriction, including without limitation the rights to use,* copy, modify, merge, publish, distribute, sublicense, and/or sell* copies of the Software, and to permit persons to whom the* Software is furnished to do so, subject to the following* conditions:* * The above copyright notice and this permission notice shall be* included in all copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR* OTHER DEALINGS IN THE SOFTWARE.**/ package  {	import com.dreamsocket.analytics.Track;	import com.dreamsocket.analytics.TrackerManager;	import com.dreamsocket.analytics.TrackerModuleLoader;	import com.dreamsocket.analytics.TrackerModuleLoaderEvent;	import com.dreamsocket.analytics.TrackerModuleLoaderParams;	import com.dreamsocket.analytics.url.URLTrackerModule;		import flash.display.Sprite;			public class TestTrackerModuleLoader extends Sprite	{		private var m_loader:TrackerModuleLoader;		public function TestTrackerModuleLoader()		{			var params:TrackerModuleLoaderParams = new TrackerModuleLoaderParams();			var data:XML = new XML("<URL><enabled>true</enabled><handlers><handler><ID>track1</ID><params><URL>http://foo.com/track1.gif</URL></params></handler><handler><ID>track2</ID><params><URL>http://foo.com/track2.gif?id=${data.id}</URL></params></handler><handler><ID>track3</ID><params><URL>http://foo.com/track3.gif?id=${data}</URL></params></handler></handlers></URL>");			params.config = "test_tracking_url.xml";//data;			params.resource = "../bin/daf_url.swf";//new URLTrackerModule();			params.stage = this.stage;						this.m_loader = new TrackerModuleLoader();			this.m_loader.addEventListener(TrackerModuleLoaderEvent.MODULE_FAILED, this.onModuleFailed);			this.m_loader.addEventListener(TrackerModuleLoaderEvent.MODULE_LOADED, this.onModuleLoaded);			this.m_loader.load(params);		}						private function onModuleLoaded(p_event:TrackerModuleLoaderEvent):void		{			TrackerManager.addTracker("test", p_event.tracker);						TrackerManager.track(new Track("track1", "test string"));			TrackerManager.track(new Track("track2", {id:"testid"}));			TrackerManager.track(new Track("track3", "test string"));					}				private function onModuleFailed(p_event:TrackerModuleLoaderEvent):void		{			trace(p_event);		}			}}